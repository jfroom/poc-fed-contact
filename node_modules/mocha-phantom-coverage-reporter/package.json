{
  "name": "mocha-phantom-coverage-reporter",
  "description": "PhantomJS LCOV reporter for Mocha",
  "version": "0.1.0",
  "author": {
    "name": "Mathieu DesvÃ©",
    "email": "mathieu.desve@me.com"
  },
  "keywords": [
    "mocha",
    "reporter",
    "lcov",
    "coverage",
    "html",
    "phantomjs"
  ],
  "dependencies": {
    "mocha": "~1.16.1",
    "jade": "~0.35.0"
  },
  "devDependencies": {
    "chai": "~1.8.1",
    "chai-fs": "0.0.3"
  },
  "directories": {
    "lib": "./lib"
  },
  "main": "index.js",
  "engines": {
    "node": ">= 0.6.0"
  },
  "scripts": {
    "test": "mocha -R spec"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mazerte/mocha-phantom-coverage-reporter"
  },
  "readmeFilename": "README.md",
  "gitHead": "70b8f5f796f74bab5803293390d13bfbacffef41",
  "license": "BSD",
  "readme": "mocha-phantom-lcov-reporter\n===================\n\n[![Build Status](https://travis-ci.org/mazerte/mocha-phantom-coverage-reporter.png?branch=master)](https://travis-ci.org/mazerte/mocha-phantom-coverage-reporter)\n[![Dependency Status](https://gemnasium.com/mazerte/mocha-phantom-coverage-reporter.png)](https://gemnasium.com/mazerte/mocha-phantom-coverage-reporter)\n\n[![NPM](https://nodei.co/npm/mocha-phantom-coverage-reporter.png?downloads=true&stars=true)](https://nodei.co/npm/mocha-phantom-coverage-reporter/) \n\nPhantomJS LCOV reporter for [Mocha](http://visionmedia.github.io/mocha/).\n\nThis reporter combine three Mocha reporter: [Spec](http://visionmedia.github.io/mocha/), [HTMLCov](http://visionmedia.github.io/mocha/) and [Mocha Lcov Reporter](https://github.com/StevenLooman/mocha-lcov-reporter). It work with NodeJS and in browser with PhantomJS.\n\nThe output lcov file is fully compatible with Coveralls\n\nUsage\n-----\n\nFor prepare your sources files for coverage you can read the \"Usage\" section of [Mocha Lcov Reporter](https://github.com/StevenLooman/mocha-lcov-reporter) or \"Mocha + JSCoverage\" and \"Istanbul\" section of [Coveralls node helper](https://github.com/cainus/node-coveralls).\nIf you are using CoffeeScript, I recommend [CoffeeCoverage](https://github.com/benbria/coffee-coverage).\n\nFor NodeJS\n```bash\nmocha -R mocha-phantom-lcov-reporter\n```\n\nIn browser\n```coffeescript\n# Gruntfile.coffee\ngrunt.loadNpmTasks('grunt-mocha')\n\ngrunt.initConfig\n\tmocha:\n\t\t\tall: \n\t\t\t\toptions:\n\t\t\t\t\tmocha:\n\t\t\t\t\t\tignoreLeaks: false\n\n\t\t\t\t\turls: ['http://localhost:<%= connect.test.options.port %>/']\n\t\t\t\t\trun: false\n\t\t\t\t\treporter: 'mocha-phantom-coverage-reporter'\n\t\t\t\t\ttimeout: 5000\n```\n\nThis exemple is issue to [generator-footguard](https://github.com/mazerte/generator-footguard) a project generator for [Yeoman](http://yeoman.io). You can see the result on [test-footguard](https://github.com/mazerte/test-footguard)\n\nReport\n------\n\nIn your console you can see the spec reporter of [Mocha](http://visionmedia.github.io/mocha/) and too files are created in coverage directory: coverage.lcov and coverage.html.\n\nThe file \"coverage.html\", it's the result of Mocha HTMLCov reporter. It's very helpful for debug coverage in local.\n\nThe file \"coverage.lcov\", it's file compatible with [LCOV](http://ltp.sourceforge.net/coverage/lcov.php) and [Coveralls](http://coveralls.io)\n\nLink to Coveralls\n-----------------\n\nFor link your project with [Coveralls](http://coveralls.io), start to add [node-coveralls](https://github.com/cainus/node-coveralls) dependency in your project.\n\n```bash\n$ npm install coveralls --save-dev\n```\n\nFor send coverage result to Coveralls\n\n```bash\ncat ./coverage/coverage.lcov | ./node_modules/coveralls/bin/coveralls.js\n```\n\nCoveralls parse all files in lcov file for add source, maybe your sources are not linked correctly you can specify the folder like this:\n\n```bash\ncat ./coverage/coverage.lcov | ./node_modules/coveralls/bin/coveralls.js src\n```\n\nTips\n----\n\nIf you work with [Grunt](http://gruntjs.com/) and [CoffeeCcript](http://coffeescript.org/), I recommend you [grunt-coffeecov](https://github.com/mazerte/grunt-coffeecov).\n\n```coffeescript\n# Gruntfile.coffee\ngrunt.loadNpmTasks('grunt-mocha')\ngrunt.loadNpmTasks('grunt-coffeecov')\ngrunt.loadNpmTasks('grunt-contrib-coffee')\n\ngrunt.initConfig\n  connect:\n    test:\n      options:\n        port: 3000\n        hostname: '0.0.0.0'\n\n  coffee:\n    dist:\n      expand: true\n      cwd: 'src/coffee/'\n      src: ['**/*.coffee']\n      dest: '.tmp/js'\n      ext: '.js'\n\n  coffeecov:\n    options:\n      path: 'relative'\n    dist:\n      src: 'src/coffee/app'\n      dest: '.tmp/js/app'\n\n  mocha:\n    all: \n      options:\n        mocha:\n          ignoreLeaks: false\n\n        urls: ['http://localhost:3000/']\n        run: false\n        reporter: 'mocha-phantom-coverage-reporter'\n        timeout: 10000\n\ngrunt.registerTask('test', [\n  'coffee:dist'\n  'coffeecov:dist'\n  'connect:test'\n  'mocha'\n])\n```\n",
  "bugs": {
    "url": "https://github.com/mazerte/mocha-phantom-coverage-reporter/issues"
  },
  "homepage": "https://github.com/mazerte/mocha-phantom-coverage-reporter",
  "_id": "mocha-phantom-coverage-reporter@0.1.0",
  "_from": "mocha-phantom-coverage-reporter@~0.1.0"
}
